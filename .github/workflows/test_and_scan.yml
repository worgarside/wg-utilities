---
name: Test & Scan

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to run tests on
        required: true
        default: main
  workflow_call:
    inputs:
      branch:
        type: string
        description: Branch to run tests on
        required: true
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - develop

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit Tests
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # I'm developing on macOS, so this should be covered
          # - macos-latest
        python-version:
          - '3.10'
          - '3.11'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          cache: poetry
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: poetry install --all-extras --sync

      - name: Run Tests
        id: unit_tests
        run: poetry run pytest --cov=./ --cov-report=xml
        continue-on-error: true

      - name: Upload `coverage.xml` as Artifact
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./coverage.xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          fail_ci_if_error: true
          verbose: true
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Check on UT failures
        if: steps.unit_tests.outcome != 'success'
        run: exit 1

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Coverage Report
        uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: ./coverage.xml

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
