---
name: Draft Release

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - release/*
  workflow_dispatch:

jobs:
  create-pr:
    name: Create PR
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.get-tag.outputs.release-tag }}
    steps:
      - name: Get Release Tag
        id: get-tag
        # yamllint disable rule:line-length
        run: |
          release_tag=$(echo ${{ github.ref_name }} | cut -d '/' -f2)

          if ! [[ $release_tag =~ ^[0-9]{1,2}\.[0-9]{1,4}\.[0-9]{1,4}$ ]]
          then
              echo "Release number is invalid: \`$release_tag\`" >> $GITHUB_STEP_SUMMARY
              exit 1
          fi

          echo "release-tag=$release_tag" >> $GITHUB_OUTPUT
        # yamllint enable rule:line-length

      - name: Check If PR Exists
        id: check-if-pr-exists
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          existing_pr=$(
            gh pr list \
            --repo ${{ github.repository }} \
            --json baseRefName,headRefName,title \
            --jq '
              .[] | select(
                .baseRefName == "main"
              ) | select(
                .headRefName == "release/${{ steps.get-tag.outputs.release-tag }}"
              )
            '
          )

          if [[ -z "$existing_pr" ]]; then
              echo "create-pr=true" >> $GITHUB_OUTPUT
          else
              echo -e "Existing PR found: ```json" >> $GITHUB_STEP_SUMMARY
              echo "$existing_pr" | jq --color-output >> $GITHUB_STEP_SUMMARY
              echo -e "```" >> $GITHUB_STEP_SUMMARY
              echo "create-pr=false" >> $GITHUB_OUTPUT
          fi

      - name: Create PR
        if: steps.check-if-pr-exists.outputs.create-pr == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr create \
            --repo ${{ github.repository }} \
            --title "Release ${{ steps.get-tag.outputs.release-tag }}" \
            --fill \
            --base main \
            --head release/${{ steps.get-tag.outputs.release-tag }}

  draft-release:
    name: Draft Release
    needs:
      - create-pr
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Validate `pyproject.toml` version
        # yamllint disable rule:line-length
        run: |
          expected_line="version = \"${{ needs.create-pr.outputs.release-tag }}\""
          actual_line=$(grep -E "^version = \"" pyproject.toml)
          if [ "$expected_line" != "$actual_line" ]
          then
              echo "`pyproject.toml` version is invalid: \`$actual_line\`" >> $GITHUB_STEP_SUMMARY
              exit 1
          fi
        # yamllint enable rule:line-length

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-add-to-notes:
    name: Build and Add to Release Notes
    needs:
      - create-pr
      - draft-release
    uses: ./.github/workflows/build_and_publish.yml
    with:
      build_branch: ${{ github.base_ref }}
      environment: 'development'
      release_tag: ${{ needs.create-pr.outputs.release-tag }}
    secrets:
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
